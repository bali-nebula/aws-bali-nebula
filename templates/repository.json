{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template creates the API gateway and lambda functions needed to implement the Bali Nebula Repository Service.",
  "Parameters": {
    "ServiceName": {
      "Description": "The name of the lambda function.",
      "Type": "String",
      "Default": "bali-nebula-repository"
    },
    "TestColor": {
      "Description": "The color of the environment being used for testing.",
      "Type": "String",
      "Default": "green",
      "AllowedValues" : ["blue", "green"],
      "ConstraintDescription" : "You must specify either 'blue' or 'green'."
    },
    "EnvironmentBucket": {
      "Description": "The name of the S3 bucket that contains the environment configuration files.",
      "Type": "String",
      "Default": "bali-nebula-environment-us-east-1"
    }
  },
  "Conditions": {
    "BlueIsTesting" : {
       "Fn::Equals": [
          {"Ref": "TestColor"},
          "blue"
       ]
    },
    "GreenIsTesting" : {
       "Fn::Equals": [
          {"Ref": "TestColor"},
          "green"
       ]
    }
  },
  "Outputs": {
    "ApiId": {
      "Value": { "Ref": "ServiceApi" }
    }
  },
  "Resources": {
    "ServiceApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "Bali Nebula Repository Service",
        "Description": "This API allows a client application to interact with the Bali Nebula Repository Service.",
        "EndpointConfiguration": { "Types": [ "REGIONAL" ] }
      }
    },
    "ProxyResource": {
      "Type": "AWS::ApiGateway::Resource",
      "DependsOn": [ "ServiceApi" ],
      "Properties": {
        "RestApiId": { "Ref": "ServiceApi" },
        "ParentId": { "Fn::GetAtt": [ "ServiceApi", "RootResourceId" ] },
        "PathPart": "{proxy+}"
      }
    },
    "ProxyMethod": {
      "Type": "AWS::ApiGateway::Method",
      "DependsOn": [ "ProxyResource" ],
      "Properties": {
        "RestApiId": { "Ref": "ServiceApi" },
        "ResourceId": { "Ref": "ProxyResource" },
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "Uri": { "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ServiceLambda.Arn}/invocations" }
        }
      }
    },
    "ServiceDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": [ "ProxyMethod" ],
      "Properties": {
        "RestApiId": { "Ref": "ServiceApi" }
      }
    },
    "BlueStage": {
      "Type": "AWS::ApiGateway::Stage",
      "DependsOn": [ "ServiceDeployment" ],
      "Properties": {
        "DeploymentId": { "Ref": "ServiceDeployment" },
        "RestApiId": { "Ref": "ServiceApi" },
        "StageName": "blue",
        "Description" : "This stage deploys the Bali Nebula Repository Service in the blue environment.",
        "Variables" : { "EnvironmentColor": "blue" },
        "TracingEnabled" : false,
        "CacheClusterEnabled" : false,
        "CacheClusterSize" : "0.5"
      }
    },
    "BluePath": {
      "Type": "AWS::ApiGateway::BasePathMapping",
      "DependsOn": [ "BlueStage" ],
      "Properties": {
        "RestApiId": { "Ref": "ServiceApi" },
        "DomainName": "bali-nebula.net",
        "BasePath": {
          "Fn::If" : [
            "BlueIsTesting",
            "test-repository",
            "repository"
          ]
        },
        "Stage": "blue"
      }
    },
    "GreenStage": {
      "Type": "AWS::ApiGateway::Stage",
      "DependsOn": [ "ServiceDeployment" ],
      "Properties": {
        "DeploymentId": { "Ref": "ServiceDeployment" },
        "RestApiId": { "Ref": "ServiceApi" },
        "StageName": "green",
        "Description" : "This stage deploys the Bali Nebula Repository Service in the green environment.",
        "Variables" : { "EnvironmentColor": "green" },
        "TracingEnabled" : false,
        "CacheClusterEnabled" : false,
        "CacheClusterSize" : "0.5"
      }
    },
    "GreenPath": {
      "Type": "AWS::ApiGateway::BasePathMapping",
      "DependsOn": [ "GreenStage" ],
      "Properties": {
        "RestApiId": { "Ref": "ServiceApi" },
        "DomainName": "bali-nebula.net",
        "BasePath": {
          "Fn::If" : [
            "GreenIsTesting",
            "test-repository",
            "repository"
          ]
        },
        "Stage": "green"
      }
    },
    "ServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Service": ["lambda.amazonaws.com"] },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "LambdaPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject",
                    "s3:GetObject"
                  ],
                  "Resource": [
                    "arn:aws:s3:::bali-nebula-names-us-west-2/*",
                    "arn:aws:s3:::bali-nebula-documents-us-west-2/*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject",
                    "s3:GetObject",
                    "s3:DeleteObject"
                  ],
                  "Resource": [
                    "arn:aws:s3:::bali-nebula-drafts-us-west-2/*",
                    "arn:aws:s3:::bali-nebula-messages-us-west-2/*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:ListBucket"
                  ],
                  "Resource": [
                    "arn:aws:s3:::bali-nebula-messages-us-west-2"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    { "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${ServiceName}:*" }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "ServiceLambda": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [ "ServiceRole" ],
      "Properties": {
        "FunctionName": { "Ref": "ServiceName" },
        "Description": "This lambda function implements the Bali Nebula Repository Service.",
        "Role": { "Fn::GetAtt": [ "ServiceRole", "Arn" ] },
        "Runtime": "nodejs12.x",
        "MemorySize": 256,
        "Timeout": 10,
        "Code": {
          "S3Bucket": { "Ref": "EnvironmentBucket" },
          "S3Key": { "Fn::Sub": "lambdas/${ServiceName}.zip" }
        },
        "Handler": { "Fn::Sub": "${ServiceName}.handler" }
      }
    },
    "ServicePermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [ "ServiceLambda" ],
      "Properties": {
        "Principal": "apigateway.amazonaws.com",
        "Action": "lambda:InvokeFunction",
        "FunctionName": { "Fn::GetAtt": [ "ServiceLambda", "Arn" ] },
        "SourceArn": { "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ServiceApi}/*" }
      }
    },
    "ServiceLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "DependsOn": [ "ServiceLambda" ],
      "Properties": {
        "LogGroupName": { "Fn::Sub": "/aws/lambda/${ServiceLambda}" },
        "RetentionInDays": 7
      }
    },
    "ApiRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Service": ["apigateway.amazonaws.com"] },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Path": "/",
        "ManagedPolicyArns": [
            { "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs" }
        ]
      }
    },
    "ApiAccount": {
      "Type": "AWS::ApiGateway::Account",
      "DependsOn": [ "ApiRole" ],
      "Properties": {
        "CloudWatchRoleArn": { "Fn::GetAtt": [ "ApiRole", "Arn" ] }
      }
    }
  }
}
