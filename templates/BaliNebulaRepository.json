{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template creates the API gateway and lambda functions needed to implement the Bali Nebula Repository.",
  "Parameters": {
    "EnvironmentBucket": {
      "Description": "The name of the S3 bucket that contains the environment configuration files.",
      "Type": "String",
      "Default": "craterdog-bali-nebula-us-east-1"
    }
  },
  "Outputs": {
    "ApiId": {
      "Value": { "Ref": "RepositoryAPI" }
    }
  },
  "Resources": {
    "RepositoryAPI": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "Nebula Repository API",
        "Description": "This API allows a client application to interact with the Bali Nebula Repository."
      }
    },
    "RepositoryAPIDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": { "Ref": "RepositoryAPI" }
      },
      "DependsOn": [
        "ProxyMethod"
      ]
    },
    "RepositoryLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": ["sts:AssumeRole"],
              "Effect": "Allow",
              "Principal": { "Service": ["lambda.amazonaws.com"] }
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "LambdaPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:HeadObject",
                    "s3:PostObject",
                    "s3:GetObject"
                  ],
                  "Resource": [
                    "arn:aws:s3:::craterdog-bali-certificates-us-west-2/*",
                    "arn:aws:s3:::craterdog-bali-types-us-west-2/*",
                    "arn:aws:s3:::craterdog-bali-documents-us-west-2/*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:HeadObject",
                    "s3:GetObject",
                    "s3:PutObject",
                    "s3:DeleteObject"
                  ],
                  "Resource": [ "arn:aws:s3:::craterdog-bali-drafts-us-west-2/*" ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:PutObject"
                  ],
                  "Resource": [ "arn:aws:s3:::craterdog-bali-queues-us-west-2/*" ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [ { "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/bali-nebula-repository:*" } ]
                }
              ]
            }
          }
        ]
      }
    },
    "RepositoryLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/bali-nebula-repository",
        "RetentionInDays": 1
      }
    },
    "RepositoryLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "bali-nebula-repository",
        "Description": "This lambda function implements the Bali Nebula Repository API.",
        "Code": {
          "S3Bucket": { "Ref": "EnvironmentBucket" },
          "S3Key": "lambdas/BaliNebulaRepository.zip"
        },
        "Handler": "BaliNebulaRepository.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "RepositoryLambdaRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 5
      }
    },
    "RepositoryLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Principal": "apigateway.amazonaws.com",
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RepositoryLambda",
            "Arn"
          ]
        },
        "SourceArn": { "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RepositoryAPI}/*" }
      }
    },
    "ProxyResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": { "Ref": "RepositoryAPI" },
        "ParentId": {
          "Fn::GetAtt": [
            "RepositoryAPI",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}"
      }
    },
    "ProxyMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": { "Ref": "RepositoryAPI" },
        "ResourceId": { "Ref": "ProxyResource" },
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "Uri": { "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RepositoryLambda.Arn}/invocations" }
        }
      }
    }
  }
}
